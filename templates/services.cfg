# Written by  () at: July 11, 1507, 9:32 am
# Generated for 
#################################### Default Settings (all services will use this settings by default ######################################
define service {

        name                            generic-service
        active_checks_enabled           1       ; Active service checks are enabled
        passive_checks_enabled          1       ; Passive service checks are enabled/accepted
        parallelize_check               1       ; Active service checks should be parallelized
                                                ; (disabling this can lead to major performance problems)
        obsess_over_service             1       ; We should obsess over this service (if necessary)
        check_freshness                 0       ; Default is to NOT check service 'freshness'
        notifications_enabled           1       ; Service notifications are enabled
        event_handler_enabled           1       ; Service event handler is enabled
        flap_detection_enabled          1       ; Flap detection is enabled
        process_perf_data               1       ; Process performance data
        retain_status_information       1       ; Retain status information across program restarts
        retain_nonstatus_information    1       ; Retain non-status information across program restarts
        register                        0       ; DONT REGISTER THIS DEFINITION - ITS NOT A REAL SERVICE, JUST A TEMPLATE!
        is_volatile                     0
        check_period                    24x7
        notification_period             24x7
        normal_check_interval           10       ; This directive is used to define the number of "time units" to wait before
                                                ; scheduling the next "regular" check of the service.
        retry_check_interval            1       ; This directive is used to define the number of "time units" to wait before
                                                ; scheduling a re-check of the service. Services are rescheduled at the retry                                 
                                                ; interval when the have changed to a non-OK state. Once the service has been
                                                ; retried max_attempts times without a change in its status, it will revert
                                                ; being scheduled at its "normal" rate as defined by the check_interval value
        notification_interval           25      ; This directive is used to define the number of "time units" (minutes)
                                                ; to wait before re-notifying a contact that this server
                                                ; is still down or unreachable.
        max_check_attempts              10      ; This directive is used to define the number of times that Nagios will
                                                ; retry the service check command if it returns any state
                                                ; other than an OK state.
	notification_options            c,w,u,r ; critical, warning, unknown, recovery

	########## What does this do? ############################################################################################################################################
	# Nagios will check something (lets say, "is mtn box up?") every 10 min. If the service is OK, it will recheck it after 10 min more.
	# If it encounters a problem (warning, critical or unknown), it will check every 1 min until 10 min have passed.
	# If between that 10 min, the state returns to OK, no alert is sent and it begins from 0 again.
	# If after that 9 criticals (or warnings) the 10th is a critical (or warning) as well, then it will send the alert email/text.
	# This is done to avoid false positives. IE, the load of the CPU can be in a 90% usage for 3 minutes, but this is not a real problem. The box was stressed, that is it.
	# Nagios will not send an alarm because in the 4 check the CPU will be fine again, so it will recieve an OK and the 10 min counter won't reach 10.
	# Once the alert is sent, nagios will recheck the service every 25 min (and sending the proper alarm) until it is OK again.
	###########################################################################################################################################################################
}

define service{

        name                            no-notifications
        active_checks_enabled           1       ; Active service checks are enabled
        passive_checks_enabled          1       ; Passive service checks are enabled/accepted
        parallelize_check               1       ; Active service checks should be parallelized
                                                ; (disabling this can lead to major performance problems)
        obsess_over_service             1       ; We should obsess over this service (if necessary)
        check_freshness                 0       ; Default is to NOT check service 'freshness'
        notifications_enabled           1       ; Service notifications are enabled
        event_handler_enabled           1       ; Service event handler is enabled
        flap_detection_enabled          1       ; Flap detection is enabled
        process_perf_data               1       ; Process performance data
        retain_status_information       1       ; Retain status information across program restarts
        retain_nonstatus_information    1       ; Retain non-status information across program restarts
        register                        0       ; DONT REGISTER THIS DEFINITION - ITS NOT A REAL SERVICE, JUST A TEMPLATE!
        is_volatile                     0
        check_period                    24x7
        notification_period             24x7
        normal_check_interval           10       ; This directive is used to define the number of "time units" to wait before
                                                ; scheduling the next "regular" check of the service.
        retry_check_interval            1       ; This directive is used to define the number of "time units" to wait before
                                                ; scheduling a re-check of the service. Services are rescheduled at the retry                                 
                                                ; interval when the have changed to a non-OK state. Once the service has been
                                                ; retried max_attempts times without a change in its status, it will revert
                                                ; being scheduled at its "normal" rate as defined by the check_interval value
        notification_interval           25      ; This directive is used to define the number of "time units" (minutes)
                                                ; to wait before re-notifying a contact that this server
                                                ; is still down or unreachable.
        max_check_attempts              10      ; This directive is used to define the number of times that Nagios will
                                                ; retry the service check command if it returns any state
                                                ; other than an OK state.
        ;notification_options            c,w,u,r ; critical, warning, unknown, recovery
        notification_options            n
}


define service{
        name                            custom
        active_checks_enabled           1
        passive_checks_enabled          1
        parallelize_check               1
        obsess_over_service             1
        check_freshness                 0
        notifications_enabled           1
        event_handler_enabled           1
        flap_detection_enabled          1
        process_perf_data               1
        retain_status_information       1
        retain_nonstatus_information    1
        register                        0
        is_volatile                     0
}

define service{
        name                            every30min
        active_checks_enabled           1
        passive_checks_enabled          1
        parallelize_check               1
        obsess_over_service             1
        check_freshness                 0
        notifications_enabled           1
        event_handler_enabled           1
        flap_detection_enabled          1
        process_perf_data               1
        retain_status_information       1
        retain_nonstatus_information    1
        register                        0
        is_volatile                     0
        check_period                    24x7
        notification_period             24x7
        normal_check_interval           5
        retry_check_interval            1
        notification_interval           30
        max_check_attempts              30
        notification_options            c,w,u,r
}

define service{
        name   		                Process
        active_checks_enabled           1
        passive_checks_enabled          1
        parallelize_check               1
        obsess_over_service             1
        check_freshness                 0
        notifications_enabled           1
        event_handler_enabled           1
        flap_detection_enabled          1
        process_perf_data               1
        retain_status_information       1
        retain_nonstatus_information    1
        register                        0
        is_volatile                     0
        check_period            	24x7
        notification_period     	24x7
        normal_check_interval 		3
        retry_check_interval   		1
        notification_interval   	25
        max_check_attempts      	2
        notification_options    	w,u,c,r
}



define service{
	; Used for services that we don't want to alarm during night. Only warnings are sent via mail
	name				Night
        active_checks_enabled           1
        passive_checks_enabled          1
        parallelize_check               1
        obsess_over_service             1
        check_freshness                 0
        notifications_enabled           1
        event_handler_enabled           1
        flap_detection_enabled          0
        process_perf_data               1
        retain_status_information       1
        retain_nonstatus_information    1
        register                        0
        is_volatile                     0
        check_period            	Night
        notification_period     	Night
        normal_check_interval   	5
        retry_check_interval    	1
        notification_interval   	25
        max_check_attempts      	5
        notification_options    	u,w,r
}

define service{
	; Used for services that we don't want to alarm during night. Criticals are sent during day hours (8-24)
	name				Day
        active_checks_enabled           1
        passive_checks_enabled          1
        parallelize_check               1
        obsess_over_service             1
        check_freshness                 0
        notifications_enabled           1
        event_handler_enabled           1
        flap_detection_enabled          0
        process_perf_data               1
        retain_status_information       1
        retain_nonstatus_information    1
        register                        0
        is_volatile                     0
        check_period            	Day
        notification_period     	Day
        normal_check_interval   	5
        retry_check_interval    	1
        notification_interval   	25
        max_check_attempts      	5
        notification_options    	u,w,c,r
}

define service {
        name                            workhours
        check_period                    workhours
        notification_period             workhours
        active_checks_enabled           1       ; Active service checks are enabled
        passive_checks_enabled          1       ; Passive service checks are enabled/accepted
        parallelize_check               1       ; Active service checks should be parallelized
                                                ; (disabling this can lead to major performance problems)
        obsess_over_service             1       ; We should obsess over this service (if necessary)
        check_freshness                 0       ; Default is to NOT check service 'freshness'
        notifications_enabled           1       ; Service notifications are enabled
        event_handler_enabled           1       ; Service event handler is enabled
        flap_detection_enabled          1       ; Flap detection is enabled
        process_perf_data               1       ; Process performance data
        retain_status_information       1       ; Retain status information across program restarts
        retain_nonstatus_information    1       ; Retain non-status information across program restarts
        register                        0       ; DONT REGISTER THIS DEFINITION - ITS NOT A REAL SERVICE, JUST A TEMPLATE!
        is_volatile                     0
        normal_check_interval           10       ; This directive is used to define the number of "time units" to wait before
                                                ; scheduling the next "regular" check of the service.
        retry_check_interval            1       ; This directive is used to define the number of "time units" to wait before
                                                ; scheduling a re-check of the service. Services are rescheduled at the retry
                                                ; interval when the have changed to a non-OK state. Once the service has been
                                                ; retried max_attempts times without a change in its status, it will revert
                                                ; being scheduled at its "normal" rate as defined by the check_interval value
        notification_interval           25      ; This directive is used to define the number of "time units" (minutes)
                                                ; to wait before re-notifying a contact that this server
                                                ; is still down or unreachable.
        max_check_attempts              10      ; This directive is used to define the number of times that Nagios will
                                                ; retry the service check command if it returns any state
                                                ; other than an OK state.
        notification_options            c,w,u,r
}

define service{
        ; service is checked every minute and if it's NOT OK during 1 minute, an alarm is sent. Next alarm will be sent in 5 min if service is still in a NOT OK state.
	; This configuration is VERY aggressive, use it only with very critical alarms (like the OSPF failures detection on ltm01)
	; It could hit many false positives an overload the system.
        name                            MaxAlert
        active_checks_enabled           1
        passive_checks_enabled          1
        parallelize_check               1
        obsess_over_service             1
        check_freshness                 0
        notifications_enabled           1
        event_handler_enabled           1
        flap_detection_enabled          0
        process_perf_data               1
        retain_status_information       1
        retain_nonstatus_information    1
        register                        0
        is_volatile                     0
        check_period            	24x7 
        notification_period     	24x7
        normal_check_interval   	1
        retry_check_interval    	1
        max_check_attempts      	1
        notification_interval   	5
        notification_options    	u,w,c,r
}


############# SNMP TRAPS Generic Service Description (Bruno) ##################

define service{
   name                    snmptrap-service
   use                     generic-service
   register                0
   is_volatile             1
   check_command           check-host-alive
   max_check_attempts      1
   normal_check_interval   1
   retry_check_interval    1
   active_checks_enabled   0
   passive_checks_enabled  1
   notifications_enabled   0
   check_period            none
   notification_interval   31536000
}
